{"version":3,"file":"unetjs.js","sources":["../src/unetutils.js","../src/unetsocket.js"],"sourcesContent":["import {AgentID, MessageClass, Services} from 'fjage/dist/esm/fjage';\n\nconst DatagramReq = MessageClass('org.arl.unet.DatagramReq');\nconst DatagramNtf = MessageClass('org.arl.unet.DatagramNtf');\nconst BasebandSignal = MessageClass('org.arl.unet.bb.BasebandSignal');\n\nlet UnetServices = {\n  'NODE_INFO': 'org.arl.unet.Services.NODE_INFO',\n  'ADDRESS_RESOLUTION': 'org.arl.unet.Services.ADDRESS_RESOLUTION',\n  'DATAGRAM': 'org.arl.unet.Services.DATAGRAM',\n  'PHYSICAL': 'org.arl.unet.Services.PHYSICAL',\n  'RANGING': 'org.arl.unet.Services.RANGING',\n  'BASEBAND': 'org.arl.unet.Services.BASEBAND',\n  'LINK': 'org.arl.unet.Services.LINK',\n  'MAC': 'org.arl.unet.Services.MAC',\n  'ROUTING': 'org.arl.unet.Services.ROUTING',\n  'ROUTE_MAINTENANCE': 'org.arl.unet.Services.ROUTE_MAINTENANCE',\n  'TRANSPORT': 'org.arl.unet.Services.TRANSPORT',\n  'REMOTE': 'org.arl.unet.Services.REMOTE',\n  'STATE_MANAGER': 'org.arl.unet.Services.STATE_MANAGER',\n};\n\nObject.assign(Services, UnetServices);\n\n/**\n * Well-known protocol number assignments used in UnetStack\n * @typedef {Object.<string, number>} Protocol\n */\nlet Protocol = {\n  'DATA' : 0,               // Protocol number for user application data.\n  'RANGING' : 1,            // Protocol number for use by ranging agents.\n  'LINK' : 2,               // Protocol number for use by link agents.\n  'REMOTE' : 3,             // Protocol number for use by remote management agents.\n  'MAC' : 4,                // Protocol number for use by MAC protocol agents.\n  'ROUTING' : 5,            // Protocol number for use by routing agents.\n  'TRANSPORT' : 6,          // Protocol number for use by transport agents.\n  'ROUTE_MAINTENANCE' : 7,   // Protocol number for use by route maintenance agents.\n  'LINK2' : 8,              // Protocol number for use by secondary link agents.\n  'USER' : 32,              // Lowest protocol number allowable for user protocols.\n  'MAX' : 63,               // Largest protocol number allowable.\n};\n\n/**\n * Well-known protocol Messages used in UnetStack\n * @typedef {Object.<string, MessageClass>} UnetMessages\n */\nlet UnetMessages = {\n  // unet\n  'TestReportNtf'          : MessageClass('org.arl.unet.TestReportNtf'), \n  'AbnormalTerminationNtf' : MessageClass('org.arl.unet.AbnormalTerminationNtf'), \n  'CapabilityListRsp'      : MessageClass('org.arl.unet.CapabilityListRsp'), \n  'CapabilityReq'          : MessageClass('org.arl.unet.CapabilityReq'), \n  'ClearReq'               : MessageClass('org.arl.unet.ClearReq'), \n  'DatagramCancelReq'      : MessageClass('org.arl.unet.DatagramCancelReq'), \n  'DatagramDeliveryNtf'    : MessageClass('org.arl.unet.DatagramDeliveryNtf'), \n  'DatagramFailureNtf'     : MessageClass('org.arl.unet.DatagramFailureNtf'), \n  'DatagramNtf'            : MessageClass('org.arl.unet.DatagramNtf'), \n  'DatagramProgressNtf'    : MessageClass('org.arl.unet.DatagramProgressNtf'), \n  'DatagramReq'            : MessageClass('org.arl.unet.DatagramReq'), \n  'ParamChangeNtf'         : MessageClass('org.arl.unet.ParamChangeNtf'), \n  'RefuseRsp'              : MessageClass('org.arl.unet.RefuseRsp'), \n  'FailureNtf'             : MessageClass('org.arl.unet.FailureNtf'), \n\n  // net\n  'DatagramTraceReq'       : MessageClass('org.arl.unet.net.DatagramTraceReq'), \n  'RouteDiscoveryReq'      : MessageClass('org.arl.unet.net.RouteDiscoveryReq'), \n  'RouteTraceReq'          : MessageClass('org.arl.unet.net.RouteTraceReq'), \n  'RouteDiscoveryNtf'      : MessageClass('org.arl.unet.net.RouteDiscoveryNtf'), \n  'RouteTraceNtf'          : MessageClass('org.arl.unet.net.RouteTraceNtf'), \n\n  // phy\n  'FecDecodeReq'           : MessageClass('org.arl.unet.phy.FecDecodeReq'), \n  'RxJanusFrameNtf'        : MessageClass('org.arl.unet.phy.RxJanusFrameNtf'), \n  'TxJanusFrameReq'        : MessageClass('org.arl.unet.phy.TxJanusFrameReq'), \n  'BadFrameNtf'            : MessageClass('org.arl.unet.phy.BadFrameNtf'), \n  'BadRangeNtf'            : MessageClass('org.arl.unet.phy.BadRangeNtf'),\n  'ClearSyncReq'           : MessageClass('org.arl.unet.phy.ClearSyncReq'), \n  'CollisionNtf'           : MessageClass('org.arl.unet.phy.CollisionNtf'), \n  'RxFrameNtf'             : MessageClass('org.arl.unet.phy.RxFrameNtf', DatagramNtf), \n  'RxFrameStartNtf'        : MessageClass('org.arl.unet.phy.RxFrameStartNtf'), \n  'SyncInfoReq'            : MessageClass('org.arl.unet.phy.SyncInfoReq'), \n  'SyncInfoRsp'            : MessageClass('org.arl.unet.phy.SyncInfoRsp'), \n  'TxFrameNtf'             : MessageClass('org.arl.unet.phy.TxFrameNtf'), \n  'TxFrameReq'             : MessageClass('org.arl.unet.phy.TxFrameReq', DatagramReq), \n  'TxFrameStartNtf'        : MessageClass('org.arl.unet.phy.TxFrameStartNtf'), \n  'TxRawFrameReq'          : MessageClass('org.arl.unet.phy.TxRawFrameReq'), \n\n  // addr\n  'AddressAllocReq'        : MessageClass('org.arl.unet.addr.AddressAllocReq'), \n  'AddressAllocRsp'        : MessageClass('org.arl.unet.addr.AddressAllocRsp'), \n  'AddressResolutionReq'   : MessageClass('org.arl.unet.addr.AddressResolutionReq'), \n  'AddressResolutionRsp'   : MessageClass('org.arl.unet.addr.AddressResolutionRsp'), \n\n  // bb\n  'BasebandSignal'         : MessageClass('org.arl.unet.bb.BasebandSignal'), \n  'RecordBasebandSignalReq' : MessageClass('org.arl.unet.bb.RecordBasebandSignalReq'), \n  'RxBasebandSignalNtf'    : MessageClass('org.arl.unet.bb.RxBasebandSignalNtf', BasebandSignal), \n  'TxBasebandSignalReq'    : MessageClass('org.arl.unet.bb.TxBasebandSignalReq', BasebandSignal), \n\n  // link\n  'LinkStatusNtf'          : MessageClass('org.arl.unet.link.LinkStatusNtf'), \n\n  // localization\n  'RangeNtf'               : MessageClass('org.arl.unet.localization.RangeNtf'), \n  'RangeReq'               : MessageClass('org.arl.unet.localization.RangeReq'), \n  'BeaconReq'              : MessageClass('org.arl.unet.localization.BeaconReq'), \n  'RespondReq'             : MessageClass('org.arl.unet.localization.RespondReq'), \n  'InterrogationNtf'       : MessageClass('org.arl.unet.localization.InterrogationNtf'), \n\n\n  // mac\n  'ReservationAcceptReq'   : MessageClass('org.arl.unet.mac.ReservationAcceptReq'), \n  'ReservationCancelReq'   : MessageClass('org.arl.unet.mac.ReservationCancelReq'), \n  'ReservationReq'         : MessageClass('org.arl.unet.mac.ReservationReq'), \n  'ReservationRsp'         : MessageClass('org.arl.unet.mac.ReservationRsp'), \n  'ReservationStatusNtf'   : MessageClass('org.arl.unet.mac.ReservationStatusNtf'), \n  'RxAckNtf'               : MessageClass('org.arl.unet.mac.RxAckNtf'), \n  'TxAckReq'               : MessageClass('org.arl.unet.mac.TxAckReq'), \n\n\n  // remote\n  'RemoteExecReq'          : MessageClass('org.arl.unet.remote.RemoteExecReq'), \n  'RemoteFailureNtf'       : MessageClass('org.arl.unet.remote.RemoteFailureNtf'), \n  'RemoteFileGetReq'       : MessageClass('org.arl.unet.remote.RemoteFileGetReq'), \n  'RemoteFileNtf'          : MessageClass('org.arl.unet.remote.RemoteFileNtf'), \n  'RemoteFilePutReq'       : MessageClass('org.arl.unet.remote.RemoteFilePutReq'), \n  'RemoteSuccessNtf'       : MessageClass('org.arl.unet.remote.RemoteSuccessNtf'), \n  'RemoteTextNtf'          : MessageClass('org.arl.unet.remote.RemoteTextNtf'), \n  'RemoteTextReq'          : MessageClass('org.arl.unet.remote.RemoteTextReq'), \n\n  // scheduler\n  'AddScheduledSleepReq'   : MessageClass('org.arl.unet.scheduler.AddScheduledSleepReq'), \n  'GetSleepScheduleReq'    : MessageClass('org.arl.unet.scheduler.GetSleepScheduleReq'), \n  'RemoveScheduledSleepReq' : MessageClass('org.arl.unet.scheduler.RemoveScheduledSleepReq'), \n  'SleepScheduleRsp'       : MessageClass('org.arl.unet.scheduler.SleepScheduleRsp'), \n  'WakeFromSleepNtf'       : MessageClass('org.arl.unet.scheduler.WakeFromSleepNtf'), \n\n  // state\n  'ClearStateReq'          : MessageClass('org.arl.unet.state.ClearStateReq'), \n  'SaveStateReq'           : MessageClass('org.arl.unet.state.SaveStateReq')\n};\n\n/**\n * A message which requests the transmission of the datagram from the Unet\n * \n * @typedef {Message} DatagramReq\n * @property {number[]} data - data as an Array of bytes\n * @property {number} from - from/source node address\n * @property {number} to - to/destination node address\n * @property {number} protocol - protocol number to be used to send this Datagram\n * @property {boolean} reliability - true if Datagram should be reliable, false if unreliable\n * @property {number} ttl - time-to-live for the datagram. Time-to-live is advisory, and an agent may choose it ignore it\n */\n\n/**\n * Notification of received datagram message received by the Unet node.\n * \n * @typedef {Message} DatagramNtf\n * @property {number[]} data - data as an Array of bytes\n * @property {number} from - from/source node address\n * @property {number} to - to/destination node address\n * @property {number} protocol - protocol number to be used to send this Datagram\n * @property {number} ttl - time-to-live for the datagram. Time-to-live is advisory, and an agent may choose it ignore it\n */\n\n/**\n * An identifier for an agent or a topic.\n * @external AgentID\n * @see {@link https://org-arl.github.io/fjage/jsdoc/|fj책ge.js Documentation}\n */\n\n/**\n * Services supported by fjage agents.\n * @external Services\n * @see {@link https://org-arl.github.io/fjage/jsdoc/|fj책ge.js Documentation}\n */\n\n/**\n *  An action represented by a message.\n * @external Performative\n * @see {@link https://org-arl.github.io/fjage/jsdoc/|fj책ge.js Documentation}\n */\n\n/**\n * Function to creates a unqualified message class based on a fully qualified name.\n * @external MessageClass\n * @see {@link https://org-arl.github.io/fjage/jsdoc/|fj책ge.js Documentation}\n */\n\n/**\n * @external Gateway\n * @see {@link https://org-arl.github.io/fjage/jsdoc/|fj책ge.js Documentation}\n */\n\nexport {AgentID, Services, UnetMessages, Protocol};\n","import {Gateway, Performative} from 'fjage/dist/esm/fjage.js';\nimport {Services, UnetMessages, Protocol} from './unetutils.js';\n\nconst REQUEST_TIMEOUT = 1000;\n\nconst AddressResolutionReq = UnetMessages.AddressResolutionReq;\nconst DatagramReq = UnetMessages.DatagramReq;\nconst DatagramNtf = UnetMessages.DatagramNtf;\nconst RxFrameNtf = UnetMessages.RxFrameNtf;\n\n/**\n * Creates a new UnetSocket to connect to a running Unet instance. This constructor returns a \n * {@link Promise} instead of the constructed UnetSocket object. Use `await` or `.then()` to get \n * a reference to the UnetSocket object. Based on if this is run in a Browser or Node.js, \n * it will internally connect over WebSockets or TCP respectively.\n *\n * \n * @class UnetSocket\n * @param {string} [hostname] - hostname/ip address of the master container to connect to\n * @param {number} [port] - port number of the master container to connect to\n * @param {string} [path='']  - path of the master container to connect to (for WebSockets)\n * @returns {Promise<UnetSocket>} - Promise which resolves to the UnetSocket object being constructed\n * \n * @example\n * let socket = await new UnetSocket('localhost', 8081, '/ws/');\n */\nexport default class UnetSocket {\n\n  constructor(hostname, port, path='') { \n    return (async () => {\n      this.gw = new Gateway({\n        hostname : hostname,\n        port : port,\n        path : path\n      });\n      this.localProtocol = -1;\n      this.remoteAddress = -1;\n      this.remoteProtocol = Protocol.DATA;\n      this.timeout = 0;\n      this.provider = null;\n      const alist = await this.gw.agentsForService(Services.DATAGRAM);\n      alist.forEach(a => {this.gw.subscribe(this.gw.topic(a));});\n      return this;\n    })();\n  }\n\n  /**\n   * Closes the socket. The socket functionality may not longer be accessed after this method is called.\n   * @returns {void}\n   */\n  close() {\n    this.gw.close();\n    this.gw = null;\n  }\n\n  /**\n   * Checks if a socket is closed.\n   * @returns {boolean} - true if closed, false if open\n   */\n  isClosed() { \n    return this.gw == null;\n  }\n\n  /**\n   * Binds a socket to listen to a specific protocol datagrams.\n   * Protocol numbers between Protocol.DATA+1 to Protocol.USER-1 are reserved protocols \n   * and cannot be bound. Unbound sockets listen to all unreserved\n   * @param {Protocol} protocol - protocol number to listen for\n   * @returns {boolean} - true on success, false on failure\n   */\n  bind(protocol) {\n    if (protocol == Protocol.DATA || (protocol >= Protocol.USER && protocol <= Protocol.MAX)) {\n      this.localProtocol = protocol;\n      return true;\n    }\n    return false;\n  }\n  \n  /**\n   * Unbinds a socket so that it listens to all unreserved protocols. \n   * Protocol numbers between Protocol.DATA+1 to Protocol.USER-1 are considered reserved.\n   * @returns {void}\n   */\n  unbind() { this.localProtocol = -1;}\n\n  /**\n   * Checks if a socket is bound.\n   * @returns {boolean} - true if bound to a protocol, false if unbound\n   */\n  isBound() { return this.localProtocol >= 0;}\n\n  /**\n   * Sets the default destination address and destination protocol number for datagrams sent \n   * using this socket. The defaults can be overridden for specific send() calls. \n   * The default protcol number when a socket is opened is Protcol.DATA. \n   * The default node address is undefined. \n   * Protocol numbers between Protocol.DATA+1 to Protocol.USER-1 are considered reserved, \n   * and cannot be used for sending datagrams using the socket.\n   * \n   * @param {number} to - default destination node address\n   * @param {Protocol} protocol - default protocol number\n   * @returns {boolean} - true on success, false on failure\n   */\n  connect(to, protocol) {\n    if (to >= 0 && (protocol == Protocol.DATA || (protocol >= Protocol.USER && protocol <= Protocol.MAX))) {\n      this.remoteAddress = to;\n      this.remoteProtocol = protocol;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Resets the default destination address to undefined, and the default protocol number \n   * to Protocol.DATA.\n   * @returns {void}\n   */\n  disconnect() { \n    this.remoteAddress = -1;\n    this.remoteProtocol = 0;\n  }\n\n  /**\n   * Checks if a socket is connected, i.e., has a default destination address and protocol number.\n   * @returns {boolean} - true if connected, false otherwise\n   */\n  isConnected() { return this.remoteAddress >= 0; }\n\n  /**\n   * Gets the local node address of the Unet node connected to.\n   * @returns {Promise<int>} - local node address, or -1 on error\n   */\n  async getLocalAddress() { \n    if (this.gw == null) return -1;\n    const nodeinfo = await this.gw.agentForService(Services.NODE_INFO);\n    if (nodeinfo == null) return -1;\n    const addr = await nodeinfo.get('address');\n    return addr != null ? addr : -1;\n  }\n\n  /**\n   * Gets the protocol number that the socket is bound to.\n   * @returns {number}} - protocol number if socket is bound, -1 otherwise\n   */\n  getLocalProtocol() { return this.localProtocol; }\n\n  /**\n   * Gets the default destination node address for a connected socket.\n   * @returns {number}} - default destination node address if connected, -1 otherwise\n   */\n  getRemoteAddress() { return this.remoteAddress; }\n\n  /**\n   * Gets the default transmission protocol number.\n   * @returns {number}} - default protocol number used to transmit a datagram\n   */\n  getRemoteProtocol() { return this.remoteProtocol; }\n\n  /**\n   * Sets the timeout for datagram reception. A timeout of 0 means the \n   * {@link UnetSocket#receive|receive method} will check any appropriate \n   * Datagram has already been received (and is cached) else return immediately.\n   * \n   * @param {number} ms - timeout in milliseconds\n   * @returns {void}\n   */\n  setTimeout(ms) { \n    if (ms < 0) ms = 0;\n    this.timeout = ms;\n  }\n\n  /**\n   * Gets the timeout for datagram reception.\n   * @returns {number} - timeout in milliseconds\n   */\n  getTimeout() { return this.timeout; }\n\n  /**\n   * Transmits a datagram to the specified node address using the specified protocol.\n   * Protocol numbers between Protocol.DATA+1 to Protocol.USER-1 are considered reserved,\n   * and cannot be used for sending datagrams using the socket.\n   * @param {number[]|DatagramReq} data - data to be sent over the socket as an Array of bytes or DatagramReq\n   * @param {number} to - destination node address\n   * @param {number} protocol - protocol number\n   * @returns {Promise<boolean>} - true if the Unet node agreed to send out the Datagram, false otherwise\n   */\n  async send(data, to=this.remoteAddress, protocol=this.remoteProtocol) {\n    if (to < 0 || this.gw == null) return false;\n    var req;\n    if (Array.isArray(data)){\n      req = new DatagramReq();\n      req.data = data;\n      req.to = to;\n      req.protocol = protocol;\n    } else if (data instanceof DatagramReq){\n      req = data;\n    } else {\n      return false;\n    }\n    let p = req.protocol;\n    if (p != Protocol.DATA && (p < Protocol.USER || p > Protocol.MAX)) return false;\n    if (req.recipient == null) {\n      if (this.provider == null) this.provider = await this.gw.agentForService(Services.TRANSPORT);\n      if (this.provider == null) this.provider = await this.gw.agentForService(Services.ROUTING);\n      if (this.provider == null) this.provider = await this.gw.agentForService(Services.LINK);\n      if (this.provider == null) this.provider = await this.gw.agentForService(Services.PHYSICAL);\n      if (this.provider == null) this.provider = await this.gw.agentForService(Services.DATAGRAM);\n      if (this.provider == null) return false;\n      req.recipient = this.provider;\n    }\n    const rsp = await this.gw.request(req, REQUEST_TIMEOUT);\n    return (rsp != null && rsp.perf == Performative.AGREE);\n  }\n\n  /**\n   * Receives a datagram sent to the local node and the bound protocol number. If the socket is unbound, \n   * then datagrams with all unreserved protocols are received. Any broadcast datagrams are also received.\n   * \n   * @returns {Promise<?DatagramNtf>} - datagram received by the socket\n   */\n  async receive() { \n    if (this.gw == null) return null;\n    return await this.gw.receive(msg => {\n      if (msg.__clazz__ != DatagramNtf.__clazz__ && msg.__clazz__ != RxFrameNtf.__clazz__ ) return false;\n      let p = msg.protocol;\n      if (p == Protocol.DATA || p >= Protocol.USER) {\n        return this.localProtocol < 0 || this.localProtocol == p;\n      }\n      return false;\n    }, this.timeout);\n  }\n\n  /**\n   * Gets a Gateway to provide low-level access to UnetStack.\n   * @returns {Gateway} - underlying fjage Gateway supporting this socket\n   */\n  getGateway() { return this.gw; }\n\n  /**\n   * Gets an AgentID providing a specified service for low-level access to UnetStack\n   * @param {string} svc - the named service of interest\n   * @returns {Promise<?AgentID>} - a promise which returns an {@link AgentID} that provides the service when resolved\n   */\n  async agentForService(svc) {\n    if (this.gw == null) return null;\n    return await this.gw.agentForService(svc);\n  }\n\n  /**\n   * \n   * @param {string} svc - the named service of interest\n   * @returns {Promise<AgentID[]>} - a promise which returns an array of {@link AgentID|AgentIDs} that provides the service when resolved\n   */\n  async agentsForService(svc) {\n    if (this.gw == null) return null;\n    return await this.gw.agentsForService(svc);\n  }\n\n  /**\n   * Gets a named AgentID for low-level access to UnetStack.\n   * @param {string} name - name of agent\n   * @returns {AgentID} - AgentID for the given name\n   */\n  agent(name) {\n    if (this.gw == null) return null;\n    return this.gw.agent(name);\n  }\n\n  /**\n   * Resolve node name to node address.\n   * @param {string} nodeName - name of the node to resolve\n   * @returns {Promise<?number>} - address of the node, or null if unable to resolve\n   */\n  async host(nodeName) { \n    const arp = await this.agentForService(Services.ADDRESS_RESOLUTION);\n    if (arp == null) return null;\n    const req = new AddressResolutionReq(nodeName);\n    req.name = nodeName;\n    req.recipient = arp;\n    const rsp = await this.gw.request(req, REQUEST_TIMEOUT);\n    if (rsp == null || ! Object.prototype.hasOwnProperty.call(rsp, 'address')) return null;\n    return rsp.address;\n  }\n}"],"names":["DatagramReq","MessageClass","DatagramNtf","Services","Gateway","Performative"],"mappings":"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"}